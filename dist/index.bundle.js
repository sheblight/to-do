(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>p});var a=t(537),o=t.n(a),r=t(645),i=t.n(r),s=t(667),d=t.n(s),l=new URL(t(502),t.b),c=i()(o()),A=d()(l);c.push([n.id,":root {\n    --body-color: #526368;\n    --sub-color: #1e2f39;\n    --light-sub-color: #405258;\n    --accent-color: #968a7d;\n    --dark-accent-color: #806742;\n    --text-color: #e4e1cf;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\n.hidden {\n    display: none !important;\n}\n\nbody {\n    display: grid;\n    grid-template-columns: 15rem 1fr;\n    grid-template-rows: 3.5rem calc(100vh - 3.5rem);\n    background-color: var(--body-color);\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\nli {\n    display: flex;\n    list-style: none;\n}\n\n/* preceding icon classes */\n.icon {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\nsvg {\n    width: 2em;\n    height: 2em;\n}\n\n.tag svg {\n    width: 1em;\n    height: 1em;\n}\n\n/* header */\nheader {\n    grid-area: 1/1/1/3;\n    background-color: var(--sub-color);\n}\n\n/* side menu*/\nnav {\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: 2rem auto 3rem 3rem 1fr 5rem;\n    padding-left: 2rem;\n    background-color: var(--light-sub-color);\n}\n\nnav .icon {\n    border: none;\n    background-color: transparent;\n    font-size: 1rem;\n    font-weight: bold;\n    color: var(--text-color);\n    fill: var(--text-color);\n}\n\n.menu-time-options li {\n    padding: 0;\n}\n\nnav input {\n    padding: 0.5rem;\n    width: 60%;  \n    color:var(--text-color)\n}\n\nnav .tag p {\n    width: 60%;\n}\n\n.tag-list li {\n    padding: 0.5em 0 0.5em 2em;\n}\n\n/* main content */\nmain {\n    padding: 2rem 4rem;\n    overflow: auto;\n}\n\ninput {\n    border: none;\n    background-color: transparent;\n}\n\n.task-list-head {\n    display:flex;\n    align-items: center;\n}\n\n.divider {\n    border: 2px solid var(--accent-color);\n    width: 100%;\n    height: 0;\n    margin-left: 1rem;\n}\n\n.task-creation {\n    display: grid;\n    grid-template-columns: 10rem 8rem 7rem auto 6rem 6rem;\n    grid-template-rows: 3rem 3rem 3rem;\n    border: 3px solid var(--sub-color);\n    border-radius: 6px;\n    background-color: rgb(11 22 33 / 44%);\n    \n}\n\n.task-creation input::placeholder {\n    color: var(--text-color);\n}\n\n.task-creation select, .task-creation input[type=date], .task-creation .tag-group {\n    margin: 6px;\n    padding: 0;\n    cursor: pointer;\n    border: 2px solid var(--text-color);\n    border-radius: 6px;\n    background-color: rgb(92 105 107 / 51%);\n    color: var(--text-color);\n}\n\n.task-creation p, .task-creation li {\n    padding: 0.5rem;\n    font-size: 0.9rem;\n}\n\n.task-creation li {\n    background-color: #1e2f39;\n}\n\n.task-creation input[type=checkbox] {\n    margin-right: 0.5rem;\n}\n\n.task-creation option {\n    background-color: var(--sub-color);\n    color: var(--text-color);\n}\n\n.task-creation button {\n    margin: 6px;\n    border: none;\n    border-radius: 6px;\n}\n\n.task-entry {\n    display: grid;\n    grid-template-columns: 2rem auto;\n    grid-template-rows: auto;\n    color: var(--text-color);\n}\n\n.task-entry button {\n    grid-area: 1/1/3/1;\n    border: none;\n    fill: var(--sub-color);\n    background-color: transparent;\n}\n\n.tag-group {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n    padding: 1rem 0 0 0;\n}\n\nmain .icon {\n    border: none;\n    background-color: transparent;\n    font-size: 1rem;\n    font-weight: bold;\n    color: var(--text-color);\n    fill: var(--text-color);\n}\n\n\n/* task modal */\n.task-modal-wrapper, .tag-modal-wrapper {\n    position:fixed;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0,0,0,0.3);\n}\n\n.task-modal, .tag-modal {\n    box-sizing: border-box;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    background-color: var(--accent-color);\n    padding: 3rem;\n    \n}\n\n.task-modal {\n    padding: 2rem 3rem;\n}\n\n/*\n.close {\n    position: absolute;\n    right: 0.5rem;\n    top: 0.5rem;\n    background-color: transparent;\n    border: none;\n    padding: 0;\n}\n*/\n.task-modal input, .task-modal textarea, .task-modal button {\n    border: none;\n    background-color: transparent;\n}\n\n.task-modal .title:hover::after {\n    position: relative;\n    display: inline-block;\n    content: \"\";\n    margin-left: 1rem;\n    width: 1.5rem;\n    height: 1.5rem;\n    background-image: url("+A+');\n}\n\n.task-modal .description:hover::after {\n    position: absolute;\n    display: inline-block;\n    content: "";\n    margin-left: 0.5rem;\n    width: 1rem;\n    height: 1rem;\n    background-image: url('+A+");\n}\n\n.task-modal .remove:hover {\n    fill: var(--text-color);\n    background-color: #9f1d1d;\n    border-radius: 4px;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,qBAAqB;IACrB,oBAAoB;IACpB,0BAA0B;IAC1B,uBAAuB;IACvB,4BAA4B;IAC5B,qBAAqB;AACzB;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,gCAAgC;IAChC,+CAA+C;IAC/C,mCAAmC;IACnC,4DAA4D;AAChE;;AAEA;IACI,aAAa;IACb,gBAAgB;AACpB;;AAEA,2BAA2B;AAC3B;IACI,aAAa;IACb,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,UAAU;IACV,WAAW;AACf;;AAEA;IACI,UAAU;IACV,WAAW;AACf;;AAEA,WAAW;AACX;IACI,kBAAkB;IAClB,kCAAkC;AACtC;;AAEA,aAAa;AACb;IACI,aAAa;IACb,2BAA2B;IAC3B,gDAAgD;IAChD,kBAAkB;IAClB,wCAAwC;AAC5C;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,eAAe;IACf,iBAAiB;IACjB,wBAAwB;IACxB,uBAAuB;AAC3B;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,eAAe;IACf,UAAU;IACV;AACJ;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,0BAA0B;AAC9B;;AAEA,iBAAiB;AACjB;IACI,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,6BAA6B;AACjC;;AAEA;IACI,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,qCAAqC;IACrC,WAAW;IACX,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,qDAAqD;IACrD,kCAAkC;IAClC,kCAAkC;IAClC,kBAAkB;IAClB,qCAAqC;;AAEzC;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,WAAW;IACX,UAAU;IACV,eAAe;IACf,mCAAmC;IACnC,kBAAkB;IAClB,uCAAuC;IACvC,wBAAwB;AAC5B;;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,kCAAkC;IAClC,wBAAwB;AAC5B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,gCAAgC;IAChC,wBAAwB;IACxB,wBAAwB;AAC5B;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,sBAAsB;IACtB,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,eAAe;IACf,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,eAAe;IACf,iBAAiB;IACjB,wBAAwB;IACxB,uBAAuB;AAC3B;;;AAGA,eAAe;AACf;IACI,cAAc;IACd,YAAY;IACZ,aAAa;IACb,iCAAiC;AACrC;;AAEA;IACI,sBAAsB;IACtB,kBAAkB;IAClB,SAAS;IACT,QAAQ;IACR,gCAAgC;IAChC,qCAAqC;IACrC,aAAa;;AAEjB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;;;;;;;;;CASC;AACD;IACI,YAAY;IACZ,6BAA6B;AACjC;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,cAAc;IACd,yDAAuT;AAC3T;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;IACrB,WAAW;IACX,mBAAmB;IACnB,WAAW;IACX,YAAY;IACZ,yDAAuT;AAC3T;;AAEA;IACI,uBAAuB;IACvB,yBAAyB;IACzB,kBAAkB;AACtB",sourcesContent:[":root {\n    --body-color: #526368;\n    --sub-color: #1e2f39;\n    --light-sub-color: #405258;\n    --accent-color: #968a7d;\n    --dark-accent-color: #806742;\n    --text-color: #e4e1cf;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\n.hidden {\n    display: none !important;\n}\n\nbody {\n    display: grid;\n    grid-template-columns: 15rem 1fr;\n    grid-template-rows: 3.5rem calc(100vh - 3.5rem);\n    background-color: var(--body-color);\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\nli {\n    display: flex;\n    list-style: none;\n}\n\n/* preceding icon classes */\n.icon {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\nsvg {\n    width: 2em;\n    height: 2em;\n}\n\n.tag svg {\n    width: 1em;\n    height: 1em;\n}\n\n/* header */\nheader {\n    grid-area: 1/1/1/3;\n    background-color: var(--sub-color);\n}\n\n/* side menu*/\nnav {\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: 2rem auto 3rem 3rem 1fr 5rem;\n    padding-left: 2rem;\n    background-color: var(--light-sub-color);\n}\n\nnav .icon {\n    border: none;\n    background-color: transparent;\n    font-size: 1rem;\n    font-weight: bold;\n    color: var(--text-color);\n    fill: var(--text-color);\n}\n\n.menu-time-options li {\n    padding: 0;\n}\n\nnav input {\n    padding: 0.5rem;\n    width: 60%;  \n    color:var(--text-color)\n}\n\nnav .tag p {\n    width: 60%;\n}\n\n.tag-list li {\n    padding: 0.5em 0 0.5em 2em;\n}\n\n/* main content */\nmain {\n    padding: 2rem 4rem;\n    overflow: auto;\n}\n\ninput {\n    border: none;\n    background-color: transparent;\n}\n\n.task-list-head {\n    display:flex;\n    align-items: center;\n}\n\n.divider {\n    border: 2px solid var(--accent-color);\n    width: 100%;\n    height: 0;\n    margin-left: 1rem;\n}\n\n.task-creation {\n    display: grid;\n    grid-template-columns: 10rem 8rem 7rem auto 6rem 6rem;\n    grid-template-rows: 3rem 3rem 3rem;\n    border: 3px solid var(--sub-color);\n    border-radius: 6px;\n    background-color: rgb(11 22 33 / 44%);\n    \n}\n\n.task-creation input::placeholder {\n    color: var(--text-color);\n}\n\n.task-creation select, .task-creation input[type=date], .task-creation .tag-group {\n    margin: 6px;\n    padding: 0;\n    cursor: pointer;\n    border: 2px solid var(--text-color);\n    border-radius: 6px;\n    background-color: rgb(92 105 107 / 51%);\n    color: var(--text-color);\n}\n\n.task-creation p, .task-creation li {\n    padding: 0.5rem;\n    font-size: 0.9rem;\n}\n\n.task-creation li {\n    background-color: #1e2f39;\n}\n\n.task-creation input[type=checkbox] {\n    margin-right: 0.5rem;\n}\n\n.task-creation option {\n    background-color: var(--sub-color);\n    color: var(--text-color);\n}\n\n.task-creation button {\n    margin: 6px;\n    border: none;\n    border-radius: 6px;\n}\n\n.task-entry {\n    display: grid;\n    grid-template-columns: 2rem auto;\n    grid-template-rows: auto;\n    color: var(--text-color);\n}\n\n.task-entry button {\n    grid-area: 1/1/3/1;\n    border: none;\n    fill: var(--sub-color);\n    background-color: transparent;\n}\n\n.tag-group {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n    padding: 1rem 0 0 0;\n}\n\nmain .icon {\n    border: none;\n    background-color: transparent;\n    font-size: 1rem;\n    font-weight: bold;\n    color: var(--text-color);\n    fill: var(--text-color);\n}\n\n\n/* task modal */\n.task-modal-wrapper, .tag-modal-wrapper {\n    position:fixed;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0,0,0,0.3);\n}\n\n.task-modal, .tag-modal {\n    box-sizing: border-box;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    background-color: var(--accent-color);\n    padding: 3rem;\n    \n}\n\n.task-modal {\n    padding: 2rem 3rem;\n}\n\n/*\n.close {\n    position: absolute;\n    right: 0.5rem;\n    top: 0.5rem;\n    background-color: transparent;\n    border: none;\n    padding: 0;\n}\n*/\n.task-modal input, .task-modal textarea, .task-modal button {\n    border: none;\n    background-color: transparent;\n}\n\n.task-modal .title:hover::after {\n    position: relative;\n    display: inline-block;\n    content: \"\";\n    margin-left: 1rem;\n    width: 1.5rem;\n    height: 1.5rem;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Ctitle%3Epencil%3C/title%3E%3Cpath d='M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z' /%3E%3C/svg%3E\");\n}\n\n.task-modal .description:hover::after {\n    position: absolute;\n    display: inline-block;\n    content: \"\";\n    margin-left: 0.5rem;\n    width: 1rem;\n    height: 1rem;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Ctitle%3Epencil%3C/title%3E%3Cpath d='M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z' /%3E%3C/svg%3E\");\n}\n\n.task-modal .remove:hover {\n    fill: var(--text-color);\n    background-color: #9f1d1d;\n    border-radius: 4px;\n}\n\n"],sourceRoot:""}]);const p=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);a&&i[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var r={},i=[],s=0;s<n.length;s++){var d=n[s],l=a.base?d[0]+a.base:d[0],c=r[l]||0,A="".concat(l," ").concat(c);r[l]=c+1;var p=t(A),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var g=o(m,a);a.byIndex=s,e.splice(s,0,{identifier:A,updater:g,references:1})}i.push(A)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=a(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var s=t(r[i]);e[s].references--}for(var d=a(n,o),l=0;l<r.length;l++){var c=t(r[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}r=d}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},265:(n,e,t)=>{t.d(e,{Z:()=>a});const a=(()=>{function n(n){return document.querySelector(n)}return{query:n,queryAll:function(n){return document.querySelectorAll(n)},createSVGElement:n=>{const e=document.createElementNS("http://www.w3.org/2000/svg","svg"),t=document.createElementNS("http://www.w3.org/2000/svg","path");return t.setAttribute("d",n.path),e.setAttribute("viewbox","0 0 24 24"),e.appendChild(t),e},setVisible:(e,t=!0)=>{const a=(e=>"string"==typeof e?n(e):e)(e).classList;t?a.remove("hidden"):a.add("hidden")},moveDown:e=>{const t=n(e);t.parentNode.appendChild(t)},setClick:function(e,t){n(e).addEventListener("click",t)},addEntryOfTemplate:function(e,t){const a=n(e).cloneNode(!0),o=n(t);return a.classList.remove("hidden"),o.appendChild(a),a},addTemporaryInput:function(e,t,a=""){const o=document.createElement("input"),r=n(e),i=n(t);if(r||i)return o.style+=a,r.classList.add("hidden"),i.appendChild(o),o.select(),console.log("Swapped out input."),o;console.log("Failed to find element or container")},swapInputWithText:function(e,t,a=!1){const o=n(t);return o.textContent=e.value,o.classList.remove("hidden"),a&&e.remove(),o},elementExists:e=>null!=n(e)}})()},85:(n,e,t)=>{t.d(e,{Z:()=>a});const a={save:n=>{"object"==typeof n?(window.localStorage.setItem("data",JSON.stringify(n)),console.log("Saved data.")):console.warn("Cannot save data because target data isn't an Object")},clear:()=>{window.localStorage.clear(),console.log("Cleared local data.")},hasExistingData:function(){return window.localStorage.data||!1},getDataCopy:function(){return JSON.parse(window.localStorage.data)||null}}},214:(n,e,t)=>{t.d(e,{Z:()=>o});var a=t(85);const o=function(){var n={version:"0.2.0",user:"Guest",tasks:[{id:0,checked:!1,title:"Add New Task",description:'Pressing "Add Task" at the bottom adds a new task.',deadline:"",priority:"None",tags:[{name:"Work",color:"#000000"}]},{id:1,checked:!1,title:"Add New Tag",description:'Pressing "Add Tag" on the side menu lets you add a new tag.',deadline:"",priority:"None",tags:[{name:"Work",color:"#000000"}]}],tags:[{name:"Work",color:"#000000"},{name:"Hobby",color:"#000000"},{name:"Shopping",color:"#000000"}],tagColors:["#dd4242","#7abb46","#3d95e2"]};let e;const t=()=>JSON.parse(JSON.stringify(e)),o=()=>a.Z.save(e);return{loadUserData:()=>{return console.log("Retrieving user data"),a.Z.hasExistingData()?((r=a.Z.getDataCopy()).version==n.version?(console.log(`Using most updated version ${n.version}`),e=r):"1"==n.version[0]?(e=r,e.version=n.version,console.log(`Updated to latest version ${n.version}`)):(e=JSON.parse(JSON.stringify(n)),console.log(`Reseting data due to new update. Updated to version ${n.version}`)),o(),t()):JSON.parse(JSON.stringify(n));var r},getDataCopy:t,getTaskById:n=>e.tasks.find((e=>e.id==n)),addNewTag:n=>n.name&&n.color?(e.tags.push(n),o(),n):(console.error("Extracted invalid tag format"),null),addNewTask:n=>"number"==typeof n.id&&null!=n.checked&&"string"==typeof n.title&&"string"==typeof n.description&&"string"==typeof n.deadline&&"string"==typeof n.priority&&n.tags?(n.id=0==e.tasks.length?0:e.tasks[e.tasks.length-1].id+1,e.tasks.push(n),o(),n):(console.error("Extracted invalid task format"),null),toggleCheckOffTask:n=>{const t=e.tasks.find((e=>e.id==n)),a=e.tasks.indexOf(t);if(!(a<0))return e.tasks[a].checked=!e.tasks[a].checked,o(),e.tasks[a].checked;console.warn(`Could not find task of id ${n}`)},removeTask:n=>{const t=e.tasks.find((e=>e.id==n)),a=e.tasks.indexOf(t);a<0?console.warn(`Could not find task of id ${n}`):(e.tasks.splice(a,1),o(),console.log(`Removed task entry id ${n}`))},resetData:()=>(e=JSON.parse(JSON.stringify(n)),o(),t())}}()},513:(n,e,t)=>{t.d(e,{Z:()=>o});var a=t(265);const o=(()=>{const n=a.Z.query(".task-list"),e=a.Z.query("nav ul.tag-list"),t=a.Z.query(".tag-modal-wrapper"),o=a.Z.query(".task-creation"),r=a.Z.query(".tag-group ul"),i=a.Z.query(".task-modal-wrapper"),s={modal:a.Z.query(".task-modal"),checked:a.Z.query(".task-modal-wrapper .checked"),title:a.Z.query(".task-modal-wrapper .title"),description:a.Z.query(".task-modal-wrapper .description"),tags:a.Z.query(".task-modal-wrapper .tags"),deadline:a.Z.query(".task-modal-wrapper .deadline"),priority:a.Z.query(".task-modal-wrapper .priority")},d=n=>{const e=document.createElement("li"),t=document.createElement("div"),o=document.createElement("p"),r=a.Z.createSVGElement({path:"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"});return t.classList.add("tag"),t.classList.add("icon"),o.textContent=n.name,t.appendChild(r),t.appendChild(o),e.appendChild(t),e},l=e=>{for(const t of n.children)if(t.dataset.id==e)return t;return null},c=(n,e)=>{a.Z.setVisible(n.children[0],!e),a.Z.setVisible(n.children[1],e)},A=(n,t)=>{const a=d(n);e.appendChild(a),a.addEventListener("click",t)},p=(e,t,o)=>{const r=(n=>{const e=document.createElement("div"),t=document.createElement("div"),o=(()=>{const n=document.createElement("button"),e=a.Z.createSVGElement({path:"M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"}),t=a.Z.createSVGElement({path:"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M12 20C7.59 20 4 16.41 4 12S7.59 4 12 4 20 7.59 20 12 16.41 20 12 20M16.59 7.58L10 14.17L7.41 11.59L6 13L10 17L18 9L16.59 7.58Z"});return n.classList.add("task-check"),t.classList.add("hidden"),n.appendChild(e),n.appendChild(t),n})();e.dataset.id=n.id,e.style="margin: 2rem;",e.classList.add("task-entry"),c(o,n.checked),e.appendChild(o),t.style="display: grid; grid-template-columns: auto 6rem 5rem; grid-template-rows: 3rem auto auto; align-items: center;";const r=(n,e,t,a)=>{const o=document.createElement(n);return o.classList.add(e),o.style=t,o.textContent=a,o};t.appendChild(r("p","title","grid-area: 1/1/1/1; margin-left: 1rem; font-size: 1.5rem; font-weight: 600;",n.title)),t.appendChild(r("p","description","grid-area: 2/1/2/-1; margin-left: 1rem;",n.description)),t.appendChild(r("p","deadline","grid-area: 1/2/1/2;",n.deadline)),t.appendChild(r("p","priority","grid-area: 1/3/1/3;",n.priority));const i=r("div","tag-group","grid-area: 3/1/3/-1; margin-left: 1rem;","");return n.tags.forEach((n=>{i.appendChild(d(n))})),t.appendChild(i),e.appendChild(t),e})(e);n.appendChild(r),r.childNodes[0].addEventListener("click",o),r.childNodes[1].addEventListener("click",t)};return{querySelected:n=>{const e=n.length;let t=Promise.resolve([]);for(let o=0;o<e;o++)t=t.then((e=>e.concat(a.Z.query(n[o]))));return t},addNewTag:A,addNewTask:p,removeTask:n=>{const e=l(n);e?e.remove():console.warn("Couldn't find node with matching id")},generateSideMenuTags:(n,t)=>{e.replaceChildren(),n.forEach((n=>{A(n,t(n))}))},generateHomeView:(e,t,a)=>{n.replaceChildren(),e.forEach((n=>{p(n,t(n.id),a(n))}))},extractTag:()=>{const n=document.forms.newTagForm;return{name:n.name.value,color:n.color}},extractIdOfCurrentTask:()=>s.modal.dataset.id,extractTaskFromCreation:()=>{const n={id:0,checked:!1},e=document.forms.newTaskForm;["title","description","deadline","priority"].forEach((t=>n[t]=e[t].value)),a.Z.queryAll(".task-group"),n.tags=[];for(const e of r.children)e.children[0].checked&&n.tags.push({name:e.dataset.name,color:e.dataset.color});return n},checkOffTaskEntry:(n,e)=>{const t=l(n);t?c(t.childNodes[0],e):console.warn("Couldn't find node with matching id")},checkOffTaskModal:(n,e)=>{c(n,e)},loadTagsInTaskCreation:n=>{r.replaceChildren(),n.forEach((n=>{const e=document.createElement("li"),t=document.createElement("input"),a=document.createElement("p");e.classList.add("tag-item"),e.dataset.name=n.name,e.dataset.color=n.color,t.type="checkbox",t.name=n.name,a.textContent=n.name,e.appendChild(t),e.appendChild(a),r.append(e)}))},loadTaskInModal:n=>{a.Z.setVisible(s.modal,!1),s.tags.replaceChildren(),s.modal.dataset.id=n.id;for(const e in n)"id"!=e&&"tags"!=e&&"checked"!=e&&("description"==e?s[e].value=n[e]:s[e].textContent=n[e]);c(s.checked,n.checked),n.tags.forEach((n=>{s.tags.appendChild(d(n))})),a.Z.setVisible(s.modal)},toggleTaskListDropdown:()=>{a.Z.setVisible(r,r.classList.contains("hidden"))},openTagModal:()=>{a.Z.setVisible(t)},closeTagModal:()=>{a.Z.setVisible(t,!1)},openTaskCreation:()=>{a.Z.setVisible(o)},closeTaskCreation:()=>{a.Z.setVisible(o,!1)},openTaskModal:()=>{a.Z.setVisible(i)},closeTaskModal:()=>{a.Z.setVisible(i,!1)}}})()},502:n=>{n.exports="data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 24 24%27%3E%3Ctitle%3Epencil%3C/title%3E%3Cpath d=%27M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z%27 /%3E%3C/svg%3E"}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var r=e[a]={id:a,exports:{}};return n[a](r,r.exports,t),r.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),a=t(795),o=t.n(a),r=t(569),i=t.n(r),s=t(565),d=t.n(s),l=t(216),c=t.n(l),A=t(589),p=t.n(A),m=t(426),g={};g.styleTagTransform=p(),g.setAttributes=d(),g.insert=i().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=c(),e()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals;var u=t(214),C=t(513);const k=u.Z.loadUserData(),f=n=>()=>{},h=n=>()=>{b.openTask(u.Z.getTaskById(n))},v=n=>()=>{C.Z.checkOffTaskEntry(n.id,u.Z.toggleCheckOffTask(n.id))};C.Z.generateSideMenuTags(k.tags,f),C.Z.generateHomeView(k.tasks,h,v);const b={goToHome:()=>{C.Z.generateHomeView(u.Z.getDataCopy().tasks,h,v),console.log("Load home view.")},addTag:()=>{C.Z.openTagModal()},closeTagModal:()=>{C.Z.closeTagModal()},submitTag:()=>{const n=u.Z.addNewTag(C.Z.extractTag());C.Z.addNewTag(n,(()=>{})),C.Z.closeTagModal()},clearAll:function(){Promise.resolve(u.Z.resetData()).then((n=>{C.Z.generateSideMenuTags(n.tags,f),C.Z.generateHomeView(n.tasks,h,v)}))},newTask:()=>{C.Z.loadTagsInTaskCreation(u.Z.getDataCopy().tags),C.Z.openTaskCreation()},toggleSelectTag:()=>{C.Z.toggleTaskListDropdown()},closeTaskCreation:()=>{C.Z.closeTaskCreation()},createTask:()=>{const n=u.Z.addNewTask(C.Z.extractTaskFromCreation());C.Z.addNewTask(n,h(n.id),v(n)),C.Z.closeTaskCreation()},openTask:function(n){C.Z.openTaskModal(),C.Z.loadTaskInModal(n)},checkOffTaskModal:function(){const n=C.Z.extractIdOfCurrentTask(),e=u.Z.toggleCheckOffTask(n);C.Z.checkOffTaskEntry(n,e),C.Z.checkOffTaskModal(this,e)},updateTask:()=>{},closeTask:()=>{C.Z.closeTaskModal()},removeTask:()=>{const n=C.Z.extractIdOfCurrentTask();u.Z.removeTask(n),C.Z.removeTask(n),C.Z.closeTaskModal(),console.log(u.Z.getDataCopy())}},I=new Map([[".menu-time-options li:first-child",b.goToHome],[".tag-add",b.addTag],["button.data-clear",b.clearAll],["main button.add",b.newTask],[".task-creation .tag-group p",b.toggleSelectTag],[".task-creation .cancel",b.closeTaskCreation],[".task-creation .submit",b.createTask],[".task-modal-wrapper",()=>{console.log("remove task")}],[".task-modal button.close",b.closeTask],[".task-modal .checked",b.checkOffTaskModal],[".task-modal .remove",b.removeTask],[".tag-modal .cancel",b.closeTagModal],[".tag-modal .submit",b.submitTag],[".tag-modal button.close",b.closeTagModal]]),B=Array.from(I,(n=>n[0]));C.Z.querySelected(B).then((n=>{for(let e=0;e<B.length;e++)n[e].addEventListener("click",I.get(B[e]))})),console.log(k)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,