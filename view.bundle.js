(()=>{"use strict";var e,t={265:(e,t,n)=>{n.d(t,{Z:()=>r});const r=(()=>{function e(e){return document.querySelector(e)}return{query:e,queryAll:function(e){return document.querySelectorAll(e)},createSVGElement:e=>{const t=document.createElementNS("http://www.w3.org/2000/svg","svg"),n=document.createElementNS("http://www.w3.org/2000/svg","path");return n.setAttribute("d",e.path),t.setAttribute("viewbox","0 0 24 24"),t.appendChild(n),t},toggleHidden:t=>{const n=(t=>"string"==typeof t?e(t):t)(t).classList;n.contains("hidden")?n.remove("hidden"):n.add("hidden")},moveDown:t=>{const n=e(t);n.parentNode.appendChild(n)},setClick:function(t,n){e(t).addEventListener("click",n)},addEntryOfTemplate:function(t,n){const r=e(t).cloneNode(!0),o=e(n);return r.classList.remove("hidden"),o.appendChild(r),r},addTemporaryInput:function(t,n,r=""){const o=document.createElement("input"),d=e(t),a=e(n);if(d||a)return o.style+=r,d.classList.add("hidden"),a.appendChild(o),o.select(),console.log("Swapped out input."),o;console.log("Failed to find element or container")},swapInputWithText:function(t,n,r=!1){const o=e(n);return o.textContent=t.value,o.classList.remove("hidden"),r&&t.remove(),o},elementExists:t=>null!=e(t)}})()}},n={};function r(e){var o=n[e];if(void 0!==o)return o.exports;var d=n[e]={exports:{}};return t[e](d,d.exports,r),d.exports}r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(e=r(265)).Z.query(".task-list"),e.Z.query("nav ul.tag-list"),e.Z.query(".tag-modal-wrapper"),e.Z.query(".task-creation"),e.Z.query(".tag-group ul"),e.Z.query(".task-modal-wrapper")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,